<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zzzzzz.mapper.BuildingMapper">

    <insert id="save">
        insert into building(name, introduction, admin_id) values(#{name},
                    #{introduction}, #{adminId})
    </insert>

    <update id="update">
        update building set name = #{name}, introduction = #{introduction}, admin_id = #{adminId}
        where id = #{id}
    </update>

    <delete id="delete">
        delete from building where id = #{id}
    </delete>

    <select id="list" resultType="org.zzzzzz.entity.Building">
        select b.id id, b.name name, b.introduction, d.name adminName, d.id adminId
            from building b, dormitory_admin d where b.admin_id = d.id
    </select>

    <select id="list_count" resultType="int">
        select count(*)
        from building b, dormitory_admin d where b.admin_id = d.id
    </select>

    <select id="list_page" resultType="Building">
        select b.id id, b.name name, b.introduction, d.name adminName, d.id adminId
        from building b, dormitory_admin d where b.admin_id = d.id
        limit #{index} , #{showdate}
    </select>

    <select id="searchByName" resultType="org.zzzzzz.entity.Building">
        select b.id id, b.name name, b.introduction, d.name adminName, d.id adminId
        from building b, dormitory_admin d where b.admin_id = d.id and b.name
        like concat('%', #{name}, '%')
    </select>

    <select id="searchByIntrodution" resultType="org.zzzzzz.entity.Building">
        select b.id id, b.name name, b.introduction, d.name adminName, d.id adminId
        from building b, dormitory_admin d where b.admin_id = d.id and b.introduction
        like concat('%', #{introduction}, '%')
    </select>
</mapper>